const express = require('express');
const axios = require('axios');

const app = express();
const PORT = 9876;
const WINDOW_SIZE = 10;
let numbers = [];

async function getNewNumbers(numberId) {
  try {
    const response = await axios.get(`http://third-party-api-url/${numberId}`, {
      timeout: 500
    });
    if (response.status === 200) {
      const newNumbers = response.data.numbers || [];
      return newNumbers.filter(num => !numbers.includes(num));
    }
  } catch (error) {
    console.error(`Error retrieving numbers: ${error}`);
  }
  return [];
}

app.get('/numbers/:numberId', async (req, res) => {
  const { numberId } = req.params;

  if (!['p', 'f', 'e', 'r'].includes(numberId)) {
    return res.status(400).json({ error: 'Invalid number ID' });
  }

  const newNumbers = await getNewNumbers(numberId);
  if (newNumbers.length === 0) {
    return res.status(500).json({ error: 'Unable to retrieve new numbers or no new numbers found' });
  }

  const previousWindow = [...numbers];
  numbers = [...numbers, ...newNumbers];

  if (numbers.length > WINDOW_SIZE) {
    numbers = numbers.slice(-WINDOW_SIZE);
  }

  const currentWindow = [...numbers];
  const average = (numbers.reduce((acc, num) => acc + num, 0) / numbers.length).toFixed(2);

  res.json({
    windowPrevState: previousWindow,
    windowCurrState: currentWindow,
    numbers: newNumbers,
    avg: average
  });
});

app.listen(PORT, () => {
  console.log(`Server is running on http://localhost:${PORT}`);
});
